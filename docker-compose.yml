version: "3"
services:
  postgres:
    container_name: music-platform-postgres
    image: postgres:14.1-alpine
    hostname: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_DB=root
      - POSTGRES_PASSWORD=pass
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "pgadmin@megacorp.com"
      PGADMIN_DEFAULT_PASSWORD: "s3kr1t_p455w0rd"
    ports:
      - "16543:80"
    depends_on:
      - postgres

  rabbitmq:
    image: rabbitmq:3.9-management
    hostname: rabbitmq
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/

  api:
    container_name: music-platform-api
    restart: always
    build:
      context: ./api
      dockerfile: Dockerfile # on move to prod, update this
    volumes:
      - ./api/src:/app/src
      - ./api/dist:/app/dist
      - /api/node_modules
      - ./api/nodemon.json:/home/node/app/nodemon.json
    env_file:
      - ./api/.env
    ports:
      - "5000:5000"
    depends_on:
      - rabbitmq
      - postgres

  upload:
    container_name: music-platform-upload
    restart: always
    build:
      context: ./upload
      dockerfile: Dockerfile # on move to prod, update this
    volumes:
      - /upload/node_modules
      - ./upload/src:/app/src
    env_file:
      - ./upload/.env
    ports:
      - "5001:5001"
    depends_on:
      - api
      - rabbitmq

  web_app:
    container_name: music-platform-web_app
    build:
      context: ./client
      dockerfile: Dockerfile
    env_file:
      - ./client/.env
    volumes:
      - /client/node_modules
      - ./client/src:/app/src
    ports:
      - "3000:3000"
    depends_on:
      - api

volumes:
  rabbitmq_data:
  rabbitmq_log:
